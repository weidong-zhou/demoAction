
name: Python CI

env:
  APP_NAME: hello
  APP_VERSION: 0.1.0

# simple git flow for single developer with linear development  
# release with tag = pyproject.toml versio = $APP_VERSION
on:
  push:
    branches:
      - "*"
    tags:
      - "v*.*.*"
  workflow_dispatch : {}

permissions:
  contents: write
  packages: write

  # need write to push to release artifact 

jobs:
  BuildAndTest:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.x'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Build package
      run: python -m build

    - name: Run locally 
      run: |
        echo "Run locally"
        pip install dist/${{ env.APP_NAME }}-${{ env.APP_VERSION }}.tar.gz
        echo ==========================================
        python -m ${{ env.APP_NAME }} 
        echo ==========================================

    - name: Build Docker
      run: |
        docker build . -t  ${{ env.APP_NAME }}:${{ github.sha }}  --build-arg APP_VERSION=$APP_VERSION
       
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@0.20.0
      with:
        image-ref: ${{ env.APP_NAME }}:${{ github.sha }} 
        format: 'table'
        exit-code: '1'
        ignore-unfixed: true
        vuln-type: 'os,library'
        severity: 'CRITICAL,HIGH'      
        
    - name: Run Docker
      run: |
        echo "Run Docker"
        echo ==========================================
        docker run -t ${{ env.APP_NAME }}:${{ github.sha }}
        echo ==========================================

    - name: Upload Build Artifact
      # if push to main or create release
      if: ${{ github.ref != 'refs/heads/main' }} || ${{ github.event_name == 'workflow_dispatch'}} || ${{ startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v4.3.3
      with:
        name: helloworld-python-module
        path: dist/*
        if-no-files-found: error
        overwrite: true


              
  # this is not part of requirement
  Upload_to_release:
    runs-on: ubuntu-latest
    needs: BuildAndTest

    steps:
      - name: Download a Build Artifact
        if: ${{ github.ref != 'refs/heads/main' }} || ${{ github.event_name == 'workflow_dispatch'}} || ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: actions/download-artifact@v4.1.7
        with:
          path: dist/
          merge-multiple: true

      - name: lsR
        run: |
          ls -R
              
      - name: Push to Release
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        uses: softprops/action-gh-release@v2.0.5
        with:        
          files: dist/*
          fail_on_unmatched_files: true